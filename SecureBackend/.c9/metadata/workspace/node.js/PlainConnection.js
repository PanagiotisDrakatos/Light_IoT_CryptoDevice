{"changed":false,"filter":false,"title":"PlainConnection.js","tooltip":"/node.js/PlainConnection.js","value":"'use strict';\n\n//npm install -g node-gyp\n//npm install ursa\n\n//npm install bluebird\n//npm install mkdirp@latest\n\n//npm install node-forge\n//npm install big-integer\n\n//npm install mongodb\n\nvar _HOST = '127.0.0.1';\nvar _PORT = 1337;\nvar _address;\n\nvar net = require('net');\n\nconst BasicProtocolEmmitter = require(\"./IOTransports\");\n\nvar server = net.createServer(function(socket) {\n    const ProtocolEmmitter = new BasicProtocolEmmitter();\n\n    socket.on('connect', (e) => {\n        console.log('client connected ' +\n            socket.remoteAddress + ':' +\n            socket.remotePort);\n    });\n\n    socket.on('data', function(data) {\n        console.log('clients says' + ': ' + data);\n        ProtocolEmmitter.Receive(data);\n        // socket.pipe(socket);\n        var send = ProtocolEmmitter.send();\n        console.log(send);\n        socket.write(send + '\\n');\n        //  socket.pipe(socket);\n\n    });\n\n    socket.on('error', function(data) {\n        console.log('client on error', data);\n\n    });\n\n    socket.on('close', (e) => {\n        console.log('client disconnected');\n        socket.end;\n        setTimeout(() => {\n            server.close();\n            server.listen(_PORT, _HOST, () => {\n                _address = server.address();\n                console.log('opened server on %j', _address);\n                console.log(' Server listening on %j ', _HOST, ':', _PORT);\n            });\n        }, 10000);\n    });\n\n});\nserver.on('Error', (e) => {\n    if (e.code == 'EADDRINUSE') {\n        console.log('Address alredy bind  retrying...');\n        setTimeout(() => {\n            server.close();\n            server.listen(_PORT, _HOST);\n        }, 10000);\n    }\n});\n\nserver.listen(_PORT, _HOST, () => {\n    _address = server.address();\n    console.log('opened server on %j', _address);\n    console.log(' Server listening on %j ', _HOST, ':', _PORT);\n});","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":120,"scrollleft":0,"selection":{"start":{"row":14,"column":17},"end":{"row":14,"column":17},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":7,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1473934374179}